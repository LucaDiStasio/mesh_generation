# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def gettriangleadjacenttoedge2D(edge=None,triangles=None,*args,**kwargs):
    varargin = gettriangleadjacenttoedge2D.varargin
    nargin = gettriangleadjacenttoedge2D.nargin

    ##
#        Project: Fluid-Structure Interaction on Deformable Surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: April 24th, 2014
#    Last update: April 24th, 2014
    
    #          Input: 
#         Output:
    
    ##
    A=edge[1,2]
    B=edge[1,3]
    tri1=0
    tri2=0
    i=1
    while logical_not((tri1 and tri2)) and i <= size(triangles,1):

        if ((triangles[i,7] == A and triangles[i,8] == B) or (triangles[i,7] == B and triangles[i,8] == A)) or ((triangles[i,7] == A and triangles[i,9] == B) or (triangles[i,7] == B and triangles[i,9] == A)) or ((triangles[i,8] == A and triangles[i,9] == B) or (triangles[i,8] == B and triangles[i,9] == A)):
            if logical_not(tri1):
                tri1=triangles[i,1]
            else:
                tri2=triangles[i,1]
        i=i + 1

    
    return tri1,tri2