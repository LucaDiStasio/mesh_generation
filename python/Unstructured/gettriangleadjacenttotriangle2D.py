# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def gettriangleadjacenttotriangle2D(tri=None,edges=None,triangles=None,*args,**kwargs):
    varargin = gettriangleadjacenttotriangle2D.varargin
    nargin = gettriangleadjacenttotriangle2D.nargin

    ##
#        Project: Fluid-Structure Interaction on Deformable Surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: April 24th, 2014
#    Last update: April 24th, 2014
    
    #          Input: 
#         Output:
    
    ##
    A=tri[1,7]
    B=tri[1,8]
    C=tri[1,9]
    tri1=0
    tri2=0
    tri3=0
    triBC1,triBC2=gettriangleadjacenttoedge2D(edges[getedge_fromnodes2D(B,C,edges),:],triangles,nargout=2)
    if triBC1 != tri[1,1]:
        tri1=copy(triBC1)
    else:
        if triBC2 != tri[1,1]:
            tri1=copy(triBC2)
    
    triAB1,triAB2=gettriangleadjacenttoedge2D(edges[getedge_fromnodes2D(A,B,edges),:],triangles,nargout=2)
    if triAB1 != tri[1,1]:
        tri2=copy(triAB1)
    else:
        if triAB2 != tri[1,1]:
            tri2=copy(triAB2)
    
    triAC1,triAC2=gettriangleadjacenttoedge2D(edges[getedge_fromnodes2D(A,C,edges),:],triangles,nargout=2)
    if triAC1 != tri[1,1]:
        tri3=copy(triAC1)
    else:
        if triAC2 != tri[1,1]:
            tri3=copy(triAC2)
    
    return tri1,tri2,tri3