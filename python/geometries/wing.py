# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def wing(Nx=None,Ny=None,L=None,x1func=None,x2func=None,x3_4func=None,cfunc=None,ctip=None,croot=None,meanlinefunc=None,*args,**kwargs):
    varargin = wing.varargin
    nargin = wing.nargin

    ##
#        Project: Fluid-Structure Interaction on Deformable Surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 14th, 2014
#    Last update: July 14th, 2014
    
    #          Input: 
#         Output:
    
    ##
    
    y=(arange(0,L,L / (Ny - 1))).T
    upperhalfwing=matlabarray([])
    lowerhalfwing=matlabarray([])
    wing=matlabarray([])
    for i in arange(1,Ny).reshape(-1):
        x1=x1func[y[i]]
        x2=x2func[y[i]]
        x3_4=x3_4func[y[i]]
        c=cfunc[y[i],ctip,croot,L]
        coords=meanlinefunc[y[i]]
        airfoil,upperairfoil,lowerairfoil=NACAxxxx(Nx,x1,x2,x3_4,c,nargout=3)
        upperdim=size(upperairfoil,1)
        lowerdim=size(lowerairfoil,1)
        dim=size(airfoil,1)
        upperhalfwing=matlabarray(cat([upperhalfwing],[dot(coords[1],ones(upperdim,1)) + upperairfoil[:,1],dot(coords[2],ones(upperdim,1)),dot(coords[3],ones(upperdim,1)) + upperairfoil[:,2]]))
        lowerhalfwing=matlabarray(cat([lowerhalfwing],[dot(coords[1],ones(lowerdim,1)) + lowerairfoil[:,1],dot(coords[2],ones(lowerdim,1)),dot(coords[3],ones(lowerdim,1)) + lowerairfoil[:,2]]))
        wing=matlabarray(cat([wing],[dot(coords[1],ones(dim,1)) + airfoil[:,1],dot(coords[2],ones(dim,1)),dot(coords[3],ones(dim,1)) + airfoil[:,2]]))
    
    halfwing=copy(wing)
    wing=matlabarray(cat([wing],[wing[:,1],- wing[:,2],wing[:,3]]))
    return wing,halfwing,upperhalfwing,lowerhalfwing