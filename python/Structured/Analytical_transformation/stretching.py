# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def stretching(oldmesh=None,funcs=None,args=None,*args,**kwargs):
    varargin = stretching.varargin
    nargin = stretching.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: March 27th, 2014
#    Last update: April 1st, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    mesh=copy(oldmesh)
    if 1 == oldmesh.D:
        g=inline(char(funcs[1]),char(args[1]))
        if oldmesh.edgeflag:
            for i in arange(1,oldmesh.totN).reshape(-1):
                mesh.nodes.meshcoordinates[1,i]=g[oldmesh.nodes.meshcoordinates(1,i)]
            for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                mesh.coordlines.dim1free[l,1]=g[oldmesh.coordlines.dim1free(l,1)]
            for i in arange(1,oldmesh.totE).reshape(-1):
                mesh.edges.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.edges.nodes(2,i))) / 2
        else:
            for i in arange(1,oldmesh.totN).reshape(-1):
                mesh.nodes.meshcoordinates[1,i]=g[oldmesh.nodes.meshcoordinates(1,i)]
            for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                mesh.coordlines.dim1free[l,1]=g[oldmesh.coordlines.dim1free(l,1)]
    else:
        if 2 == oldmesh.D:
            g1=inline(char(funcs[1]),char(args[1]),char(args[2]))
            g2=inline(char(funcs[2]),char(args[1]),char(args[2]))
            if oldmesh.edgeflag and oldmesh.faceflag:
                for i in arange(1,oldmesh.totN).reshape(-1):
                    mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i)]
                    mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i)]
                for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                    mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2)]
                    mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2)]
                for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                    mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2)]
                    mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2)]
                for i in arange(1,oldmesh.totE).reshape(-1):
                    mesh.edges.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.edges.nodes(2,i))) / 2
                    mesh.edges.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.edges.nodes(2,i))) / 2
                for i in arange(1,oldmesh.totF).reshape(-1):
                    mesh.faces.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(4,i))) / 4
                    mesh.faces.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(4,i))) / 4
            else:
                if oldmesh.edgeflag:
                    for i in arange(1,oldmesh.totN).reshape(-1):
                        mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i)]
                        mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i)]
                    for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                        mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2)]
                        mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2)]
                    for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                        mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2)]
                        mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2)]
                    for i in arange(1,oldmesh.totE).reshape(-1):
                        mesh.edges.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.edges.nodes(2,i))) / 2
                        mesh.edges.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.edges.nodes(2,i))) / 2
                else:
                    for i in arange(1,oldmesh.totN).reshape(-1):
                        mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i)]
                        mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i)]
                    for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                        mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2)]
                        mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2)]
                    for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                        mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2)]
                        mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2)]
        else:
            if 3 == oldmesh.D:
                g1=inline(char(funcs[1]),char(args[1]),char(args[2]),char(args[3]))
                g2=inline(char(funcs[2]),char(args[1]),char(args[2]),char(args[3]))
                g3=inline(char(funcs[3]),char(args[1]),char(args[2]),char(args[3]))
                if oldmesh.edgeflag and oldmesh.faceflag and oldmesh.cellflag:
                    for i in arange(1,oldmesh.totN).reshape(-1):
                        mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                        mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                        mesh.nodes.meshcoordinates[3,i]=g3[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                    for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                        mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                        mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                        mesh.coordlines.dim1free[l,3]=g3[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                    for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                        mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                        mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                        mesh.coordlines.dim2free[l,3]=g3[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                    for l in arange(1,mesh.Nlinesdim3).reshape(-1):
                        mesh.coordlines.dim3free[l,1]=g1[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                        mesh.coordlines.dim3free[l,2]=g2[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                        mesh.coordlines.dim3free[l,3]=g3[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                    for i in arange(1,oldmesh.totE).reshape(-1):
                        mesh.edges.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.edges.nodes(2,i))) / 2
                        mesh.edges.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.edges.nodes(2,i))) / 2
                        mesh.edges.centroid[3,i]=(mesh.nodes.meshcoordinates(3,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(3,mesh.edges.nodes(2,i))) / 2
                    for i in arange(1,oldmesh.totF).reshape(-1):
                        mesh.faces.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(4,i))) / 4
                        mesh.faces.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(4,i))) / 4
                        mesh.faces.centroid[3,i]=(mesh.nodes.meshcoordinates(3,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(3,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(3,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(3,mesh.faces.nodes(4,i))) / 4
                    for i in arange(1,oldmesh.totC).reshape(-1):
                        mesh.cells.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.cells.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(2,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(3,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(4,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(5,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(6,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(7,i)) + mesh.nodes.meshcoordinates(1,mesh.cells.nodes(8,i))) / 8
                        mesh.cells.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.cells.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(2,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(3,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(4,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(5,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(6,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(7,i)) + mesh.nodes.meshcoordinates(2,mesh.cells.nodes(8,i))) / 8
                        mesh.cells.centroid[3,i]=(mesh.nodes.meshcoordinates(3,mesh.cells.nodes(1,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(2,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(3,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(4,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(5,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(6,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(7,i)) + mesh.nodes.meshcoordinates(3,mesh.cells.nodes(8,i))) / 8
                else:
                    if oldmesh.edgeflag and oldmesh.faceflag:
                        for i in arange(1,oldmesh.totN).reshape(-1):
                            mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                            mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                            mesh.nodes.meshcoordinates[3,i]=g3[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                        for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                            mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                            mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                            mesh.coordlines.dim1free[l,3]=g3[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                        for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                            mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                            mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                            mesh.coordlines.dim2free[l,3]=g3[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                        for l in arange(1,mesh.Nlinesdim3).reshape(-1):
                            mesh.coordlines.dim3free[l,1]=g1[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                            mesh.coordlines.dim3free[l,2]=g2[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                            mesh.coordlines.dim3free[l,3]=g3[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                        for i in arange(1,oldmesh.totE).reshape(-1):
                            mesh.edges.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.edges.nodes(2,i))) / 2
                            mesh.edges.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.edges.nodes(2,i))) / 2
                            mesh.edges.centroid[3,i]=(mesh.nodes.meshcoordinates(3,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(3,mesh.edges.nodes(2,i))) / 2
                        for i in arange(1,oldmesh.totF).reshape(-1):
                            mesh.faces.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(1,mesh.faces.nodes(4,i))) / 4
                            mesh.faces.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(2,mesh.faces.nodes(4,i))) / 4
                            mesh.faces.centroid[3,i]=(mesh.nodes.meshcoordinates(3,mesh.faces.nodes(1,i)) + mesh.nodes.meshcoordinates(3,mesh.faces.nodes(2,i)) + mesh.nodes.meshcoordinates(3,mesh.faces.nodes(3,i)) + mesh.nodes.meshcoordinates(3,mesh.faces.nodes(4,i))) / 4
                    else:
                        if oldmesh.edgeflag:
                            for i in arange(1,oldmesh.totN).reshape(-1):
                                mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                                mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                                mesh.nodes.meshcoordinates[3,i]=g3[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                            for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                                mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                                mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                                mesh.coordlines.dim1free[l,3]=g3[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                            for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                                mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                                mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                                mesh.coordlines.dim2free[l,3]=g3[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                            for l in arange(1,mesh.Nlinesdim3).reshape(-1):
                                mesh.coordlines.dim3free[l,1]=g1[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                                mesh.coordlines.dim3free[l,2]=g2[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                                mesh.coordlines.dim3free[l,3]=g3[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                            for i in arange(1,oldmesh.totE).reshape(-1):
                                mesh.edges.centroid[1,i]=(mesh.nodes.meshcoordinates(1,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(1,mesh.edges.nodes(2,i))) / 2
                                mesh.edges.centroid[2,i]=(mesh.nodes.meshcoordinates(2,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(2,mesh.edges.nodes(2,i))) / 2
                                mesh.edges.centroid[3,i]=(mesh.nodes.meshcoordinates(3,mesh.edges.nodes(1,i)) + mesh.nodes.meshcoordinates(3,mesh.edges.nodes(2,i))) / 2
                        else:
                            for i in arange(1,oldmesh.totN).reshape(-1):
                                mesh.nodes.meshcoordinates[1,i]=g1[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                                mesh.nodes.meshcoordinates[2,i]=g2[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                                mesh.nodes.meshcoordinates[3,i]=g3[oldmesh.nodes.meshcoordinates(1,i),oldmesh.nodes.meshcoordinates(2,i),oldmesh.nodes.meshcoordinates(3,i)]
                            for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                                mesh.coordlines.dim1free[l,1]=g1[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                                mesh.coordlines.dim1free[l,2]=g2[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                                mesh.coordlines.dim1free[l,3]=g3[oldmesh.coordlines.dim1free(l,1),oldmesh.coordlines.dim1free(l,2),oldmesh.coordlines.dim1free(l,3)]
                            for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                                mesh.coordlines.dim2free[l,1]=g1[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                                mesh.coordlines.dim2free[l,2]=g2[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                                mesh.coordlines.dim2free[l,3]=g3[oldmesh.coordlines.dim2free(l,1),oldmesh.coordlines.dim2free(l,2),oldmesh.coordlines.dim2free(l,3)]
                            for l in arange(1,mesh.Nlinesdim3).reshape(-1):
                                mesh.coordlines.dim3free[l,1]=g1[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                                mesh.coordlines.dim3free[l,2]=g2[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
                                mesh.coordlines.dim3free[l,3]=g3[oldmesh.coordlines.dim3free(l,1),oldmesh.coordlines.dim3free(l,2),oldmesh.coordlines.dim3free(l,3)]
            else:
                disp('Dimension of space requested is currently not supported')
    
    return mesh