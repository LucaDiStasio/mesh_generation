# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def SSORpreconditioner(A=None,omega=None,*args,**kwargs):
    varargin = SSORpreconditioner.varargin
    nargin = SSORpreconditioner.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: May 19th, 2014
#    Last update: May 19th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    N=size(A,1)
    D=zeros(N,N)
    invD=zeros(N,N)
    E=zeros(N,N)
    F=zeros(N,N)
    for i in arange(1,N).reshape(-1):
        D[i,i]=A[i,i]
        invD[i,i]=1 / A[i,i]
        for j in arange(1,N).reshape(-1):
            if j < i:
                E[i,j]=- A[i,j]
                F[i,j]=0
            else:
                if j == i:
                    E[i,j]=0
                    F[i,j]=0
                else:
                    E[i,j]=0
                    F[i,j]=- A[i,j]
    
    M=dot(dot((D - dot(omega,E)),invD),(D - dot(omega,F)))
    invM=luinv(M)
    return M,invM