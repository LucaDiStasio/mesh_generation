# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def generatelattice2D(eta1min=None,Neta1=None,deltaeta1=None,eta2min=None,Neta2=None,deltaeta2=None,xmin=None,xmax=None,Nx=None,ymin=None,ymax=None,Ny=None,*args,**kwargs):
    varargin = generatelattice2D.varargin
    nargin = generatelattice2D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 10th, 2014
#    Last update: July 10th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    lattice=zeros(dot(Nx,Ny),6)
    deltax=(xmax - xmin) / (Nx - 1)
    deltay=(ymax - ymin) / (Ny - 1)
    xs=(arange(xmin,xmax,deltax)).T
    eta1s=(arange(eta1min,eta1min + dot(deltaeta1,(Neta1 - 1)),deltaeta1)).T
    for j in arange(1,Neta2).reshape(-1):
        lattice[dot((j - 1),Neta1) + 1:dot(j,Neta1),1]=eta1s
        lattice[dot((j - 1),Neta1) + 1:dot(j,Neta1),2]=dot((eta2min + dot(deltaeta2,(j - 1))),ones(Neta1,1))
    
    clear('eta1s')
    for j in arange(1,Ny).reshape(-1):
        lattice[dot((j - 1),Nx) + 1:dot(j,Nx),3]=xs
        lattice[dot((j - 1),Nx) + 1:dot(j,Nx),4]=dot((ymin + dot(deltay,(j - 1))),ones(Nx,1))
    
    clear('xs')
    lattice[:,5:6]=lattice[:,3:4]
    return lattice