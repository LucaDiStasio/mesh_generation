# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def generatecells3D(Nx=None,Ny=None,Nz=None,*args,**kwargs):
    varargin = generatecells3D.varargin
    nargin = generatecells3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: July 3rd, 2014
#    Last update: July 3rd, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    cells=zeros(dot(dot((Nx - 1),(Ny - 1)),(Nz - 1)),9)
    for i in arange(1,Nz - 1).reshape(-1):
        for j in arange(1,Ny - 1).reshape(-1):
            for k in arange(1,Nx - 1).reshape(-1):
                nodeindex1=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny)
                nodeindex2=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + Nx
                nodeindex3=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + Nx + 1
                nodeindex4=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + 1
                nodeindex5=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + dot(Nx,Ny)
                nodeindex6=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + dot(Nx,Ny) + Nx
                nodeindex7=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + dot(Nx,Ny) + Nx + 1
                nodeindex8=k + dot((j - 1),Nx) + dot(dot((i - 1),Nx),Ny) + dot(Nx,Ny) + 1
                cellindex=k + dot((j - 1),(Nx - 1)) + dot(dot((i - 1),(Nx - 1)),(Ny - 1))
                cells[cellindex,1]=8
                cells[cellindex,2]=nodeindex1
                cells[cellindex,3]=nodeindex4
                cells[cellindex,4]=nodeindex3
                cells[cellindex,5]=nodeindex2
                cells[cellindex,6]=nodeindex5
                cells[cellindex,7]=nodeindex8
                cells[cellindex,8]=nodeindex7
                cells[cellindex,9]=nodeindex6
    
    return cells