# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def generate_LBMgeometricinputdata(D=None,lattice=None,mesh=None,*args,**kwargs):
    varargin = generate_LBMgeometricinputdata.varargin
    nargin = generate_LBMgeometricinputdata.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: June 12th, 2014
#    Last update: June 12th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    if lattice.totN == mesh.totN:
        if 2 == D:
            LBMdata=zeros(lattice.totN,4)
            for i in arange(1,lattice.totN).reshape(-1):
                LBMdata[i,1]=lattice.nodes.meshcoordinates(1,i)
                LBMdata[i,2]=lattice.nodes.meshcoordinates(2,i)
                LBMdata[i,3]=mesh.nodes.meshcoordinates(1,i)
                LBMdata[i,4]=mesh.nodes.meshcoordinates(2,i)
        else:
            if 3 == D:
                LBMdata=zeros(lattice.totN,6)
                for i in arange(1,lattice.totN).reshape(-1):
                    LBMdata[i,1]=lattice.nodes.meshcoordinates(1,i)
                    LBMdata[i,2]=lattice.nodes.meshcoordinates(2,i)
                    LBMdata[i,3]=lattice.nodes.meshcoordinates(3,i)
                    LBMdata[i,4]=mesh.nodes.meshcoordinates(1,i)
                    LBMdata[i,5]=mesh.nodes.meshcoordinates(2,i)
                    LBMdata[i,6]=mesh.nodes.meshcoordinates(3,i)
    else:
        disp('Error: lattice has a different number of nodes from physical mesh. A one-to-one correspondence cannot be established.')
    
    return LBMdata