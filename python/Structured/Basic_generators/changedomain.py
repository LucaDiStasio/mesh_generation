# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def changedomain(D=None,oldmesh=None,dim1min=None,dim1max=None,dim2min=None,dim2max=None,dim3min=None,dim3max=None,*args,**kwargs):
    varargin = changedomain.varargin
    nargin = changedomain.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: June 12th, 2014
#    Last update: June 12th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    mesh=copy(oldmesh)
    if 2 == D:
        if oldmesh.edgeflag and oldmesh.faceflag:
            for i in arange(1,oldmesh.totN).reshape(-1):
                mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
            for i in arange(1,oldmesh.totE).reshape(-1):
                mesh.edges.centroid[1,i]=dim1min + dot((oldmesh.edges.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                mesh.edges.centroid[2,i]=dim2min + dot((oldmesh.edges.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
            for i in arange(1,oldmesh.totF).reshape(-1):
                mesh.faces.centroid[1,i]=dim1min + dot((oldmesh.faces.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                mesh.faces.centroid[2,i]=dim2min + dot((oldmesh.faces.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
        else:
            if oldmesh.edgeflag:
                for i in arange(1,oldmesh.totN).reshape(-1):
                    mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                for i in arange(1,oldmesh.totE).reshape(-1):
                    mesh.edges.centroid[1,i]=dim1min + dot((oldmesh.edges.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.edges.centroid[2,i]=dim2min + dot((oldmesh.edges.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
            else:
                for i in arange(1,oldmesh.totN).reshape(-1):
                    mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
        for j in arange(1,mesh.Ndim2).reshape(-1):
            coord2=dim2min + dot(((oldmesh.dim2min + dot(oldmesh.deltadim2,(j - 1))) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
            coord3=0
            for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                mesh.coordlines.dim1free[l,dot(3,(j - 1)) + 1]=dim1min + dot((oldmesh.coordlines.dim1free(l,dot(3,(j - 1)) + 1) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                mesh.coordlines.dim1free[l,dot(3,(j - 1)) + 2]=coord2
                mesh.coordlines.dim1free[l,dot(3,(j - 1)) + 3]=coord3
        for k in arange(1,mesh.Ndim1).reshape(-1):
            coord1=dim1min + dot(((oldmesh.dim1min + dot(oldmesh.deltadim1,(k - 1))) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
            coord3=0
            for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                mesh.coordlines.dim2free[l,dot(3,(k - 1)) + 1]=coord1
                mesh.coordlines.dim2free[l,dot(3,(k - 1)) + 2]=dim2min + dot((oldmesh.coordlines.dim2free(l,dot(3,(k - 1)) + 2) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                mesh.coordlines.dim2free[l,dot(3,(k - 1)) + 3]=coord3
    else:
        if 3 == D:
            if oldmesh.edgeflag and oldmesh.faceflag and oldmesh.cellflag:
                for i in arange(1,oldmesh.totN).reshape(-1):
                    mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                    mesh.nodes.meshcoordinates[3,i]=dim3min + dot((oldmesh.nodes.meshcoordinates(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                for i in arange(1,oldmesh.totE).reshape(-1):
                    mesh.edges.centroid[1,i]=dim1min + dot((oldmesh.edges.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.edges.centroid[2,i]=dim2min + dot((oldmesh.edges.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                    mesh.edges.centroid[3,i]=dim3min + dot((oldmesh.edges.centroid(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                for i in arange(1,oldmesh.totF).reshape(-1):
                    mesh.faces.centroid[1,i]=dim1min + dot((oldmesh.faces.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.faces.centroid[2,i]=dim2min + dot((oldmesh.faces.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                    mesh.faces.centroid[3,i]=dim3min + dot((oldmesh.faces.centroid(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                for i in arange(1,oldmesh.totC).reshape(-1):
                    mesh.cells.centroid[1,i]=dim1min + dot((oldmesh.cells.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    mesh.cells.centroid[2,i]=dim2min + dot((oldmesh.cells.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                    mesh.cells.centroid[3,i]=dim3min + dot((oldmesh.cells.centroid(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
            else:
                if oldmesh.edgeflag and oldmesh.faceflag:
                    for i in arange(1,oldmesh.totN).reshape(-1):
                        mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                        mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                        mesh.nodes.meshcoordinates[3,i]=dim3min + dot((oldmesh.nodes.meshcoordinates(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                    for i in arange(1,oldmesh.totE).reshape(-1):
                        mesh.edges.centroid[1,i]=dim1min + dot((oldmesh.edges.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                        mesh.edges.centroid[2,i]=dim2min + dot((oldmesh.edges.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                        mesh.edges.centroid[3,i]=dim3min + dot((oldmesh.edges.centroid(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                    for i in arange(1,oldmesh.totF).reshape(-1):
                        mesh.faces.centroid[1,i]=dim1min + dot((oldmesh.faces.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                        mesh.faces.centroid[2,i]=dim2min + dot((oldmesh.faces.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                        mesh.faces.centroid[3,i]=dim3min + dot((oldmesh.faces.centroid(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                else:
                    if oldmesh.edgeflag:
                        for i in arange(1,oldmesh.totN).reshape(-1):
                            mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                            mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                            mesh.nodes.meshcoordinates[3,i]=dim3min + dot((oldmesh.nodes.meshcoordinates(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                        for i in arange(1,oldmesh.totE).reshape(-1):
                            mesh.edges.centroid[1,i]=dim1min + dot((oldmesh.edges.centroid(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                            mesh.edges.centroid[2,i]=dim2min + dot((oldmesh.edges.centroid(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                            mesh.edges.centroid[3,i]=dim3min + dot((oldmesh.edges.centroid(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                    else:
                        for i in arange(1,oldmesh.totN).reshape(-1):
                            mesh.nodes.meshcoordinates[1,i]=dim1min + dot((oldmesh.nodes.meshcoordinates(1,i) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                            mesh.nodes.meshcoordinates[2,i]=dim2min + dot((oldmesh.nodes.meshcoordinates(2,i) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                            mesh.nodes.meshcoordinates[3,i]=dim3min + dot((oldmesh.nodes.meshcoordinates(3,i) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
            for i in arange(1,mesh.Ndim3).reshape(-1):
                for j in arange(1,mesh.Ndim2).reshape(-1):
                    coord2=dim2min + dot(((oldmesh.dim2min + dot(oldmesh.deltadim2,(j - 1))) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                    coord3=dim3min + dot(((mesh.dim3min + dot(mesh.deltadim3,(i - 1))) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                    for l in arange(1,mesh.Nlinesdim1).reshape(-1):
                        mesh.coordlines.dim1free[l,dot(3,(j - 1)) + dot(dot(3,mesh.Ndim2),(i - 1)) + 1]=dim1min + dot((oldmesh.coordlines.dim1free(l,dot(3,(j - 1)) + dot(dot(3,mesh.Ndim2),(i - 1)) + 1) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                        mesh.coordlines.dim1free[l,dot(3,(j - 1)) + dot(dot(3,mesh.Ndim2),(i - 1)) + 2]=coord2
                        mesh.coordlines.dim1free[l,dot(3,(j - 1)) + dot(dot(3,mesh.Ndim2),(i - 1)) + 3]=coord3
            for i in arange(1,mesh.Ndim3).reshape(-1):
                for k in arange(1,mesh.Ndim1).reshape(-1):
                    coord1=dim1min + dot(((oldmesh.dim1min + dot(oldmesh.deltadim1,(k - 1))) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    coord3=dim3min + dot(((mesh.dim3min + dot(mesh.deltadim3,(i - 1))) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
                    for l in arange(1,mesh.Nlinesdim2).reshape(-1):
                        mesh.coordlines.dim2free[l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(i - 1)) + 1]=coord1
                        mesh.coordlines.dim2free[l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(i - 1)) + 2]=dim2min + dot((oldmesh.coordlines.dim2free(l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(i - 1)) + 2) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                        mesh.coordlines.dim2free[l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(i - 1)) + 3]=coord3
            for j in arange(1,mesh.Ndim2).reshape(-1):
                for k in arange(1,mesh.Ndim1).reshape(-1):
                    coord1=dim1min + dot(((oldmesh.dim1min + dot(oldmesh.deltadim1,(k - 1))) - oldmesh.dim1min),(dim1max - dim1min)) / (oldmesh.dim1max - oldmesh.dim1min)
                    coord2=dim2min + dot(((oldmesh.dim2min + dot(oldmesh.deltadim2,(j - 1))) - oldmesh.dim2min),(dim2max - dim2min)) / (oldmesh.dim2max - oldmesh.dim2min)
                    for l in arange(1,mesh.Nlinesdim3).reshape(-1):
                        mesh.coordlines.dim3free[l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(j - 1)) + 1]=coord1
                        mesh.coordlines.dim3free[l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(j - 1)) + 2]=coord2
                        mesh.coordlines.dim3free[l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(j - 1)) + 3]=dim3min + dot((oldmesh.coordlines.dim3free(l,dot(3,(k - 1)) + dot(dot(3,mesh.Ndim1),(j - 1)) + 3) - oldmesh.dim3min),(dim3max - dim3min)) / (oldmesh.dim3max - oldmesh.dim3min)
        else:
            disp('Dimension of space requested is currently not supported')
    
    return mesh